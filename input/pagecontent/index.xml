<div xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://hl7.org/fhir ../../input-cache/schemas-r5/fhir-single.xsd">
  <!-- The spaces between the open and close "a" tag are mandatory.  (Cuz HTML renderers are dumb...) -->
  <a name="intro"> </a>
  <h3>Introduction</h3>
	<p>
	<div class="dragon">
This is a prototype Implementation Guide that is not endorsed by any organization other than the author - JohnMoehrke@gmail.com. 
     </div>
This includes the profile for basic audit of REST operations that include a patient as the subject of the data and application that would use these audit log resources. 
  </p>
	<a name="technical"> </a>
	<h3>Technical Overview</h3>
	<p>
    	<p>
For any FHIR REST operation there is a well-defined AuditEvent specified in this implementation guide. The appropriate AuditEvent shall be recorded by Client and Server applications that claim conformance to this implementation guide. The resulting set of AuditEvents are made available to a client authorized to retrieve them. The AuditEvent in this case is useful for the typical privacy office and security office use, but is also useful to enable a Patient facing app that can inform the patient when and how their data are used.
  </p>
  </p>
  <a name="walkthrough"> </a>
  <p>
    The main sections of this IG are:
  </p>
  <ul>
    <li>
      <a href="background.html">Background</a> - This is the overall Use-Case, Actors, Specifications, and Test Plan
    </li>
    <li>
      <a href="artifacts.html">Artifacts</a> - This includes all computable artifacts 
    </li>
    <li>
      <a href="downloads.html">Downloads</a> - Allows downloading a copy of this implementation guide and other useful information
    </li>
  </ul>

	<a name="questions"> </a>
	<h3>Open Questions</h3>
	<p>
	Comments and questions are welcome as <a href="https://github.com/JohnMoehrke/BasicAudit">github issues</a>, FHIR chat stream for the topic <a href="https://chat.fhir.org/#narrow/stream/179247-Security-and.20Privacy/topic/AuditEvent.20for.20Patient">AuditEvent for Patient</a>, or <a href="mailto:John.Moehrke@gmail.com">My e-mail</a>.
	</p><p>
       <p>Is there an established way to record an OAuth token that I could define? I am expecting that mostly a unique identifier of the token is minimally needed. With a username and purposeOfUse being useful. I need some guidance and samples.</p>
	   <p>Is there any alternatives to the patterns I have defined? I did note some alternatives with recommendations in narrative?</p>
	   <p>Is there some other improvements one could recommend?</p>
	   <p>note in my pattern for Query, I allow the non-base64Binary query string to be put into entity.name. Is this useful?</p>
	   <p>The base64binary should still be used to record the query/search as it was received, thus the place where no input-sensitization might have removed a malicious attempt. However even this is not clear how it should record the query and relevant http headers (mime-type), while not duplicating security information that would be recorded in an agent element.</p>
	   <p>It has been noted that HAR <a href="https://en.wikipedia.org/wiki/HAR_(file_format)">HTTP Archive format</a> might be a useful generic format for the logging of Query/Search. Also see <a href="http://www.softwareishard.com/blog/har-12-spec/#request">har-12-spec</a>.</p>
	   <p>I need some examples of how Query is recorded for variations on search. Such as a POST with a Parameters?</p>
	   <p>I wish there was a flag similar but opposite to MustSupport, something like ShouldNotUse to discourage use while not making it invalid to use. given that this flag does not exist, I have marked everything that would be discouraged as 0..0. This is not necessarily wrong, as one can always be compliant with AuditEvent core, and not follow my IG guidance. It just seems very heavy handed.</p>
	   <p>All but Delete are following a similar pattern of the initiator (client) of the RESTful interaction is identified as the Source Role ID, where the responder (server) is the Destination Role ID. This pattern is found in DICOM and XDS. This may not be as clear as would be favored. It is possible to deviate from that pattern and use Application and Custodian. This deviation should be carefully considered.</p>
	   <p>There is a start at a test plan using Gherkin/Cucumber.</p>
	   <p>I did not include the traceID stuff, should it be part of basic?</p>
	</p>
	<p></p>
	<p>TODO - tasks I know need to be done, I just didn't get to them yet.
	   
	   <p>All examples are recorded ONLY by the server. There should be also examples recorded by the client and by an intermediary. The difference is that the .source element indicates who is recording. Otherwise the pattern is the same.</p>
	   <p>Explain Query as just saving the query parameters and NOT the query results.</p>
	   <p>Explain in the narrative the general layout of that profile.</p>
	   <p>I intend to add many examples that are not compliant to the profiles, but should be considered consumable by an Audit-Client and accepted at an Audit-Repository. These will include AuditEvent logs from various IHE profiles, and degenerate forms of the included RESTful. Note that audit logging is a best-effort concept, the profiles show the best-case but best-effort fills out the AuditEvent with everything available even if it is not fully compliant.</p>
	   <p>Should response time be recorded in the .period element?</p>
     </p>

</div>